{
  "Version": "2",
  "Year": "2024",
  "Semester": "Fall",
  "project_name": "Self Organizing Map (SOM) Package ",
  "Objective": " \n            The goal of this project is to build a python Self Organizing Map (SOM) package can be used for Neural Network \n            community. We have the initial python training code which can be used and organized. The main goal is to create\n            a user friendly python package which has all the necessary functionality like train and predict. The SOM package\n            has a variety of visualization which we need to implement. We have the basic codes  however we want them to be\n            used in the package. For example we have 4 different source of data like NLP, Computer Vision, Tabular and Timeseries.\n            We have different way to visualize them (Basic figures like SOM grid and the distance will stay same accross all dataset)\n            , however for specific data we will develop different figures. We need to use the basic built data from \n            different source like Sklearn, torch ,and etc. Then we will train the SOM and use the visualization to cluster the data.\n            After the package is built we need to create multiple example for each dataset and compare them with Kmeans and other\n            classical clustering algorithm.  \n            ",
  "Dataset": "\n            Built is dataset can be used for NLP, Computer Vision, Tabular and Timeseries datasets.  \n            ",
  "Rationale": "\n            This project is going to help machine learning and deeplearning researches to use the SOM for postprocessing \n            their models predictions. This package will be alternative to the minisom package which is not complete and\n            it will be used across all the 4 type of datasets\n\n            ",
  "Approach": "\n            I plan on approaching this capstone through several steps.  \n\n            1. Create the SOM class.\n            2. Design the package and the folder structure.\n            3. Create modular and reusable figure codes. \n            4. Work on the built in datasets of 4 datatypes.\n            5. Complete the package with all the figures needed.\n            6. Create a example folder and show the usage of the package.\n            7. Use pypi to install the package.\n            8. Create a documentation from the begging till the end of the product.\n            ",
  "Timeline": "\n            This a rough time line for this project:  \n\n            - (1 Weeks) Create the SOM class structure .  \n            - (2 Weeks) Design the folder and classes and utils functions.  \n            - (1 Weeks) Modular widgets  \n            - (2 Weeks) Built in dataset \n            - (2 Weeks) Complete all the figures codes and training and testing methods\n            - (2 Weeks) Create a example folder  \n            - (2 Weeks) Pypi installation\n            - (2 Weeks) Documentation\n            ",
  "Expected Number Students": "\n            For this project maximum 2 students can work on it.  \n            ",
  "Possible Issues": "\n            The challenge is on using the right built dataset and create a professional package with efficient training code.\n            Also, installing as pypi and create clear instruction and documentation of the usage. \n            ",
  "Proposed by": "Dr. Amir Jafari",
  "Proposed by email": "ajafari@gwu.edu",
  "instructor": "Amir Jafari",
  "instructor_email": "ajafari@gmail.com",
  "github_repo": "https://github.com/amir-jafari/Capstone"
}